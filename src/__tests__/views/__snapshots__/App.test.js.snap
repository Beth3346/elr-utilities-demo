// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`layout has a header 1`] = `"<header class=\\"App-header\\"><div class=\\"header-inner\\"><h1 class=\\"App-title\\">ELR Utilities</h1><p class=\\"App-intro\\">A collection of reusable, modular Scss Mixins</p></div></header>"`;

exports[`layout has main content 1`] = `"<main class=\\"main-content\\"><aside class=\\"App-sidebar\\"><ul class=\\"sidebar-menu\\"><li><a href=\\"/\\">Animations</a><ul><li><a href=\\"/\\">Fade</a></li><li><a href=\\"/\\">Flipper</a></li></ul></li><li><a href=\\"/\\">Blocks</a></li><li><a href=\\"/\\">Components</a></li><li><a href=\\"/\\">CSS Helpers</a></li><li><a href=\\"/\\">Elements</a></li><li><a href=\\"/\\">Flex</a></li><li><a href=\\"/\\">Forms</a></li><li><a href=\\"/grid\\">Grid</a></li><li><a href=\\"/\\">Navigation</a></li><li><a href=\\"/\\">Sass Layout</a></li><li><a href=\\"/\\">Typography</a></li></ul></aside><article class=\\"content-holder\\"><section class=\\"content\\"><h2 class=\\"example-heading\\">Get Started</h2><h3 class=\\"example-subheading\\">Why Create a Sass Mixin Library</h3><p>ELR Utilities is a framework of Sass Mixins and CSS designed to speed up and streamline the development process.</p><p>I created this utility library because I found myself spending a lot of time looking up CSS syntax for stuff I used all the time. Especially clearfix. Using mixins also helps with consistency in CSS styles. If I decide I want to use a different method for styling or learn some new techniques I can update 1 mixin instead of scouring my entire CSS file.</p><h3 class=\\"example-subheading\\">The Future of ELR Utilities and CSS Libraries</h3><p>While I do still think that Sass and CSS Libraries are useful for producivity I think that many of them will fall out of use in the future. JavaScript frameworks like React and Vue make it easier to create reusable, styled components. Using Sass with these frameworks can just create more trouble than it solves.</p><p>I continue to use and maintain ELR Utilities because unfortunately not all of my projects use the most modern, cutting edge JavaScript frameworks. Sometimes I just need to build a WordPress theme or a landing page quickly. This is where a mixin library can really help producivity.</p><h3 class=\\"example-subheading\\">Recent Updates to ELR Utilities</h3><p>Recently I decided to break up ELR Sass Utilities into smaller modules. I noticed that I typically only used a small number of mixins in each project so it really seemed uncessessary to include the entire libaray. All of these modules are available on npm. I have also added compiled CSS to each module for use in projects that don&#x27;t use Scss.</p></section></article></main>"`;

exports[`layout has navigation 1`] = `"<nav class=\\"navigation-main\\"><div class=\\"navigation-inner\\"><p class=\\"logo\\">ELR Utilities</p><ul class=\\"main-menu\\"><li><a href=\\"/\\">CSS</a></li><li><a href=\\"/\\">Sass</a></li><li><a href=\\"/\\">About</a></li><li><a href=\\"/\\">Contact Me</a></li><li><a href=\\"https://github.com/Beth3346\\">GitHub</a></li></ul></div></nav>"`;
